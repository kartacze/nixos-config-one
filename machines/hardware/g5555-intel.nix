# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  services.fwupd.enable = true;

  # Cooling management
  services.thermald.enable = lib.mkDefault true;

  powerManagement.enable = true;

  # Use same ACPI identifier as Dell Ubuntu
  boot.kernelParams = [ "acpi_osi=Linux-Dell-Video" ];

  ##############################################################
  ################### NVIDIA PART ##############################
  ##############################################################

  services.xserver.videoDrivers = lib.mkDefault [ "nvidia" ];

  hardware.graphics = { enable = true; };

  # TODO: this will be a default after https://github.com/NixOS/nixpkgs/pull/326369
  hardware.nvidia.modesetting.enable = lib.mkDefault true;
  hardware.nvidia.open = false;

  hardware.nvidia.prime = {
    # offload = {
    #   enable = lib.mkOverride 990 true;
    #   enableOffloadCmd = lib.mkIf config.hardware.nvidia.prime.offload.enable
    #     true; # Provides `nvidia-offload` command.
    # };

    sync.enable = true;

    # Specify bus id of Nvidia and Intel graphics
    intelBusId = "PCI:0:2:0";
    nvidiaBusId = "PCI:1:0:0";
  };

  ##############################################################
  ################# END OF NVIDIA ##############################
  ##############################################################

  services.fstrim.enable = lib.mkDefault true;
  boot.blacklistedKernelModules =
    lib.optionals (!config.hardware.enableRedistributableFirmware) [ "ath3k" ];

  # Gnome 40 introduced a new way of managing power, without tlp.
  # However, these 2 services clash when enabled simultaneously.
  # https://github.com/NixOS/nixos-hardware/issues/260
  services.tlp.enable = lib.mkDefault
    ((lib.versionOlder (lib.versions.majorMinor lib.version) "21.05")
      || !config.services.power-profiles-daemon.enable);

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/0875fb14-5920-44c3-9275-ac8459a35ff2";
    fsType = "ext4";
  };

  fileSystems."/run/media/sda1" = {
    device = "/dev/disk/by-uuid/38f1afe8-61b2-4662-9f18-6b1193bd42f8";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/6607-EFBD";
    fsType = "vfat";
    options = [ "fmask=0022" "dmask=0022" ];
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp60s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  # services.printing.drivers = [ pkgs.brlaser ];

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
